>>> version()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'version' is not defined
>>> vers()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'vers' is not defined
>>> ver()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ver' is not defined
>>> import daily_gameday()
  File "<stdin>", line 1
    import daily_gameday()
                        ^
SyntaxError: invalid syntax
>>> import daily_gameday
>>> games = DateGames('2014-06-01')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'DateGames' is not defined
>>> games = daily_gameday.DateGames('2014-06-01')
>>> games
[u'2014_06_01_anamlb_oakmlb_1', u'2014_06_01_atlmlb_miamlb_1', u'2014_06_01_balmlb_houmlb_1', u'2014_06_01_chnmlb_milmlb_1', u'2014_06_01_cinmlb_arimlb_1', u'2014_06_01_colmlb_clemlb_1', u'2014_06_01_detmlb_seamlb_1', u'2014_06_01_kcamlb_tormlb_1', u'2014_06_01_minmlb_nyamlb_1', u'2014_06_01_nynmlb_phimlb_1', u'2014_06_01_pitmlb_lanmlb_1', u'2014_06_01_sdnmlb_chamlb_1', u'2014_06_01_sfnmlb_slnmlb_1', u'2014_06_01_tbamlb_bosmlb_1', u'2014_06_01_texmlb_wasmlb_1']
>>> games(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'list' object is not callable
>>> games[1]
u'2014_06_01_atlmlb_miamlb_1'
>>> gf = GetGame(games[0])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'GetGame' is not defined
>>> gf = daily_gameday.GetGame(games[0])
>>> gb = daily_gameday.GetGameBox(games[0])
>>> gb
<xml.etree.ElementTree.ElementTree object at 0x18d8250>
>>> reload(daily_gameday)
<module 'daily_gameday' from '/home/eddie7/code/daily_gameday.py'>
>>> ge = daily_gameday.GetGameEvents(games[0])
>>> ge
<xml.etree.ElementTree.ElementTree object at 0x156f390>
>>> 
>>> 
>>> ge.findall('.//boxscore')
[]
>>> bs = gb.findall('.//boxscore')
>>> bs
[]
>>> tl = gb.findall('.')
>>> tl
[<Element 'boxscore' at 0x1b18d50>]
>>> bs = gb.findall('//boxscore')
-c:1: FutureWarning: This search is broken in 1.3 and earlier, and will be fixed in a future version.  If you rely on the current behaviour, change it to './/boxscore'
>>> bs
[]
>>> bs = gb.findall('.//boxscore')
>>> bs
[]
>>> bs = gb.findall('boxscore')
>>> bs
[]
>>> tl
[<Element 'boxscore' at 0x1b18d50>]
>>> soup = BeatifulSoup(gb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'BeatifulSoup' is not defined
>>> soup = BeautifulSoup(gb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'BeautifulSoup' is not defined
>>> soup = BeautifulSoup(gb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'BeautifulSoup' is not defined
>>> soup = BeautifulSoup.BeautifulSoup(gb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'BeautifulSoup' is not defined
>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup(gb)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/dist-packages/beautifulsoup4-4.2.1-py2.7.egg/bs4/__init__.py", line 169, in __init__
    self.builder.prepare_markup(markup, from_encoding))
  File "/usr/local/lib/python2.7/dist-packages/beautifulsoup4-4.2.1-py2.7.egg/bs4/builder/_lxml.py", line 73, in prepare_markup
    dammit = UnicodeDammit(markup, try_encodings, is_html=True)
  File "/usr/local/lib/python2.7/dist-packages/beautifulsoup4-4.2.1-py2.7.egg/bs4/dammit.py", line 228, in __init__
    self._detectEncoding(markup, is_html)
  File "/usr/local/lib/python2.7/dist-packages/beautifulsoup4-4.2.1-py2.7.egg/bs4/dammit.py", line 397, in _detectEncoding
    xml_encoding_match = xml_encoding_re.match(xml_data)
TypeError: expected string or buffer
>>> ps = gb.findall('.//pitcher')
>>> ps
[<Element 'pitcher' at 0x1b21350>, <Element 'pitcher' at 0x1b21490>, <Element 'pitcher' at 0x1b21590>, <Element 'pitcher' at 0x1b21cd0>, <Element 'pitcher' at 0x1b21dd0>, <Element 'pitcher' at 0x1b21e90>, <Element 'pitcher' at 0x1b21f10>]
>>> ps[0].er
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Element' object has no attribute 'er'
>>> ps[0]
<Element 'pitcher' at 0x1b21350>
>>> ps[0].attrib
{'bis_s_ip': '78.1', 'bam_hld': '0', 'bis_sv': '0', 'bam_l': '4', 'pos': 'P', 'ao': '5', 'bis_era': '3.33', 'bis_s_er': '29', 'bam_w': '6', 'go': '5', 'id': '450308', 'er': '5', 'bam_bs': '0', 'bam_s_er': '29', 'bis_bs': '0', 'bis_s_h': '65', 'bam_era': '3.33', 'bam_sv': '0', 'name_display_first_last': 'Jered Weaver', 'bis_s_r': '31', 'np': '90', 'out': '18', 'bf': '28', 'bis_s_bb': '23', 'bb': '1', 'hr': '1', 'bam_s_so': '57', 'bk': '0', 'pitch_order': '100', 'loss': 'true', 'bam_s_r': '31', 'name': 'Weaver', 'bis_l': '4', 'bis_hld': '0', 'h': '11', 'bam_s_ip': '78.1', 'bis_s_so': '57', 's': '51', 'r': '6', 'so': '2', 'bam_s_bb': '23', 'bam_s_h': '65', 'bis_w': '6'}
>>>     ps[0].attrib['er'}
                     ^
SyntaxError: invalid syntax
>>> ps[0].attrib['er']
'5'
>>> ps[0].attrib['out']
'18'
>>> ps[0].attrib['win']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'win'
>>> ps[0].attrib.keys()
['bis_s_ip', 'bam_hld', 'bis_sv', 'bam_l', 'pos', 'ao', 'bis_era', 'bis_s_er', 'bam_w', 'go', 'id', 'er', 'bam_bs', 'bam_s_er', 'bis_bs', 'bis_s_h', 'bam_era', 'bam_sv', 'name_display_first_last', 'bis_s_r', 'np', 'out', 'bf', 'bis_s_bb', 'bb', 'hr', 'bam_s_so', 'bk', 'pitch_order', 'loss', 'bam_s_r', 'name', 'bis_l', 'bis_hld', 'h', 'bam_s_ip', 'bis_s_so', 's', 'r', 'so', 'bam_s_bb', 'bam_s_h', 'bis_w']
>>> 'win' in ps[0].attrib.keys()
False
>>> 'save' in ps[0].attrib.keys()
False
>>> bs = gb.findall('.//batter')
>>> bs
[<Element 'batter' at 0x1b21610>, <Element 'batter' at 0x1b21650>, <Element 'batter' at 0x1b216d0>, <Element 'batter' at 0x1b21750>, <Element 'batter' at 0x1b21790>, <Element 'batter' at 0x1b21850>, <Element 'batter' at 0x1b21890>, <Element 'batter' at 0x1b218d0>, <Element 'batter' at 0x1b21990>, <Element 'batter' at 0x1b21a10>, <Element 'batter' at 0x1b21a90>, <Element 'batter' at 0x1b21b10>, <Element 'batter' at 0x1b21ad0>, <Element 'batter' at 0x1b33210>, <Element 'batter' at 0x1b331d0>, <Element 'batter' at 0x1b33250>, <Element 'batter' at 0x1b33310>, <Element 'batter' at 0x1b33410>, <Element 'batter' at 0x1b33490>, <Element 'batter' at 0x1b33510>, <Element 'batter' at 0x1b33590>, <Element 'batter' at 0x1b33550>, <Element 'batter' at 0x1b33610>, <Element 'batter' at 0x1b33650>, <Element 'batter' at 0x1b335d0>, <Element 'batter' at 0x1b33690>, <Element 'batter' at 0x1b336d0>]
>>> bs.len
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'len'
>>> length(bs)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'length' is not defined
>>> bs.length()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'length'
>>> bs.len()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'len'
>>> len(bs)
27
>>> bs[0].attrib
{'ab': '4', 'bam_s_rbi': '11', 'sac': '0', 'pos': '1B', 'ao': '1', 'bis_s_rbi': '11', 'hbp': '0', 'fldg': '1.000', 'id': '543068', 'lob': '3', 'bis_s_d': '7', 'bis_s_h': '23', 'bis_s_t': '1', 'name_display_first_last': 'C.J. Cron', 'bis_s_r': '9', 'so': '2', 'tb': '1', 'bat_order': '700', 'bam_s_bb': '2', 'bis_s_hr': '3', 'bis_s_bb': '2', 'bb': '0', 'bam_s_hr': '3', 'hr': '0', 'bam_s_so': '13', 'bis_avg': '.299', 'bam_avg': '.299', 'e': '0', 'name': 'Cron', 'a': '0', 'bam_s_r': '9', 'bam_s_t': '1', 'd': '0', 'h': '1', 'po': '5', 'bis_s_so': '13', 'r': '0', 'bam_s_d': '7', 't': '0', 'rbi': '0', 'bam_s_h': '23', 'sb': '0', 'sf': '0'}
>>> bs[0].attrib['pa']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'pa'
>>> bs[0].attrib['a']
'0'
>>> bs[0].attrib['h']
'1'
>>> bs[0].attrib['sb']
'0'
>>> gf
<xml.etree.ElementTree.ElementTree object at 0x18d8090>
>>> dp = gf.findall('.//[event='Grounded Into DP'])
  File "<stdin>", line 1
    dp = gf.findall('.//[event='Grounded Into DP'])
                                       ^
SyntaxError: invalid syntax
>>> dp = gf.findall(".//[event='Grounded Into DP']")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/xml/etree/ElementTree.py", line 751, in findall
    return self._root.findall(path, namespaces)
  File "/usr/lib/python2.7/xml/etree/ElementTree.py", line 390, in findall
    return ElementPath.findall(self, path, namespaces)
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 293, in findall
    return list(iterfind(elem, path, namespaces))
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 263, in iterfind
    selector.append(ops[token[0]](next, token))
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 125, in prepare_descendant
    raise SyntaxError("invalid descendant")
SyntaxError: invalid descendant
>>> ge
<xml.etree.ElementTree.ElementTree object at 0x156f390>
>>> dp = ge.findall(".//[event='Grounded Into DP']")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/xml/etree/ElementTree.py", line 751, in findall
    return self._root.findall(path, namespaces)
  File "/usr/lib/python2.7/xml/etree/ElementTree.py", line 390, in findall
    return ElementPath.findall(self, path, namespaces)
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 293, in findall
    return list(iterfind(elem, path, namespaces))
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 263, in iterfind
    selector.append(ops[token[0]](next, token))
  File "/usr/lib/python2.7/xml/etree/ElementPath.py", line 125, in prepare_descendant
    raise SyntaxError("invalid descendant")
SyntaxError: invalid descendant
>>> ge.findall('.')
[<Element 'game' at 0x1b189d0>]
>>> ge.findall('*')
[<Element 'inning' at 0x1b18990>, <Element 'inning' at 0x1b33f90>, <Element 'inning' at 0x1b41c10>, <Element 'inning' at 0x1b4d0d0>, <Element 'inning' at 0x1b53150>, <Element 'inning' at 0x1b53e10>, <Element 'inning' at 0x1bf0990>, <Element 'inning' at 0x1bf6e90>, <Element 'inning' at 0x1bfbe50>, <Element 'atBat' at 0x1c02710>, <Element 'deck' at 0x1c02750>, <Element 'hole' at 0x1c02790>]
>>> atbats = ge.findall('.//atbat')
>>> atbats
[<Element 'atbat' at 0x1b18ad0>, <Element 'atbat' at 0x1b33990>, <Element 'atbat' at 0x1b33a10>, <Element 'atbat' at 0x1b33c50>, <Element 'atbat' at 0x1b33d10>, <Element 'atbat' at 0x1b33e50>, <Element 'atbat' at 0x1b410d0>, <Element 'atbat' at 0x1b41190>, <Element 'atbat' at 0x1b41310>, <Element 'atbat' at 0x1b41410>, <Element 'atbat' at 0x1b41650>, <Element 'atbat' at 0x1b41850>, <Element 'atbat' at 0x1b41950>, <Element 'atbat' at 0x1b41b50>, <Element 'atbat' at 0x1b41d10>, <Element 'atbat' at 0x1b41e10>, <Element 'atbat' at 0x1b41f50>, <Element 'atbat' at 0x1b45210>, <Element 'atbat' at 0x1b453d0>, <Element 'atbat' at 0x1b45550>, <Element 'atbat' at 0x1b45710>, <Element 'atbat' at 0x1b45890>, <Element 'atbat' at 0x1b45b90>, <Element 'atbat' at 0x1b45c50>, <Element 'atbat' at 0x1b45dd0>, <Element 'atbat' at 0x1b45f50>, <Element 'atbat' at 0x1b4d190>, <Element 'atbat' at 0x1b4d290>, <Element 'atbat' at 0x1b4d490>, <Element 'atbat' at 0x1b4d650>, <Element 'atbat' at 0x1b4d890>, <Element 'atbat' at 0x1b4d9d0>, <Element 'atbat' at 0x1b4db90>, <Element 'atbat' at 0x1b4dd50>, <Element 'atbat' at 0x1b4de10>, <Element 'atbat' at 0x1b4df50>, <Element 'atbat' at 0x1b53050>, <Element 'atbat' at 0x1b53210>, <Element 'atbat' at 0x1b532d0>, <Element 'atbat' at 0x1b533d0>, <Element 'atbat' at 0x1b534d0>, <Element 'atbat' at 0x1b53750>, <Element 'atbat' at 0x1b53910>, <Element 'atbat' at 0x1b53a50>, <Element 'atbat' at 0x1b53bd0>, <Element 'atbat' at 0x1b53d10>, <Element 'atbat' at 0x1b53f10>, <Element 'atbat' at 0x1bf00d0>, <Element 'atbat' at 0x1bf0210>, <Element 'atbat' at 0x1bf03d0>, <Element 'atbat' at 0x1bf0450>, <Element 'atbat' at 0x1bf0690>, <Element 'atbat' at 0x1bf08d0>, <Element 'atbat' at 0x1bf0a90>, <Element 'atbat' at 0x1bf0b10>, <Element 'atbat' at 0x1bf0dd0>, <Element 'atbat' at 0x1bf6090>, <Element 'atbat' at 0x1bf6390>, <Element 'atbat' at 0x1bf6710>, <Element 'atbat' at 0x1bf67d0>, <Element 'atbat' at 0x1bf69d0>, <Element 'atbat' at 0x1bf6b50>, <Element 'atbat' at 0x1bf6e10>, <Element 'atbat' at 0x1bfb0d0>, <Element 'atbat' at 0x1bfb210>, <Element 'atbat' at 0x1bfb350>, <Element 'atbat' at 0x1bfb5d0>, <Element 'atbat' at 0x1bfb890>, <Element 'atbat' at 0x1bfb990>, <Element 'atbat' at 0x1bfbb50>, <Element 'atbat' at 0x1bfbc50>, <Element 'atbat' at 0x1c02110>, <Element 'atbat' at 0x1c022d0>, <Element 'atbat' at 0x1c02510>]
>>> atbats = ge.findall(".//atbat")
>>> atbats
[<Element 'atbat' at 0x1b18ad0>, <Element 'atbat' at 0x1b33990>, <Element 'atbat' at 0x1b33a10>, <Element 'atbat' at 0x1b33c50>, <Element 'atbat' at 0x1b33d10>, <Element 'atbat' at 0x1b33e50>, <Element 'atbat' at 0x1b410d0>, <Element 'atbat' at 0x1b41190>, <Element 'atbat' at 0x1b41310>, <Element 'atbat' at 0x1b41410>, <Element 'atbat' at 0x1b41650>, <Element 'atbat' at 0x1b41850>, <Element 'atbat' at 0x1b41950>, <Element 'atbat' at 0x1b41b50>, <Element 'atbat' at 0x1b41d10>, <Element 'atbat' at 0x1b41e10>, <Element 'atbat' at 0x1b41f50>, <Element 'atbat' at 0x1b45210>, <Element 'atbat' at 0x1b453d0>, <Element 'atbat' at 0x1b45550>, <Element 'atbat' at 0x1b45710>, <Element 'atbat' at 0x1b45890>, <Element 'atbat' at 0x1b45b90>, <Element 'atbat' at 0x1b45c50>, <Element 'atbat' at 0x1b45dd0>, <Element 'atbat' at 0x1b45f50>, <Element 'atbat' at 0x1b4d190>, <Element 'atbat' at 0x1b4d290>, <Element 'atbat' at 0x1b4d490>, <Element 'atbat' at 0x1b4d650>, <Element 'atbat' at 0x1b4d890>, <Element 'atbat' at 0x1b4d9d0>, <Element 'atbat' at 0x1b4db90>, <Element 'atbat' at 0x1b4dd50>, <Element 'atbat' at 0x1b4de10>, <Element 'atbat' at 0x1b4df50>, <Element 'atbat' at 0x1b53050>, <Element 'atbat' at 0x1b53210>, <Element 'atbat' at 0x1b532d0>, <Element 'atbat' at 0x1b533d0>, <Element 'atbat' at 0x1b534d0>, <Element 'atbat' at 0x1b53750>, <Element 'atbat' at 0x1b53910>, <Element 'atbat' at 0x1b53a50>, <Element 'atbat' at 0x1b53bd0>, <Element 'atbat' at 0x1b53d10>, <Element 'atbat' at 0x1b53f10>, <Element 'atbat' at 0x1bf00d0>, <Element 'atbat' at 0x1bf0210>, <Element 'atbat' at 0x1bf03d0>, <Element 'atbat' at 0x1bf0450>, <Element 'atbat' at 0x1bf0690>, <Element 'atbat' at 0x1bf08d0>, <Element 'atbat' at 0x1bf0a90>, <Element 'atbat' at 0x1bf0b10>, <Element 'atbat' at 0x1bf0dd0>, <Element 'atbat' at 0x1bf6090>, <Element 'atbat' at 0x1bf6390>, <Element 'atbat' at 0x1bf6710>, <Element 'atbat' at 0x1bf67d0>, <Element 'atbat' at 0x1bf69d0>, <Element 'atbat' at 0x1bf6b50>, <Element 'atbat' at 0x1bf6e10>, <Element 'atbat' at 0x1bfb0d0>, <Element 'atbat' at 0x1bfb210>, <Element 'atbat' at 0x1bfb350>, <Element 'atbat' at 0x1bfb5d0>, <Element 'atbat' at 0x1bfb890>, <Element 'atbat' at 0x1bfb990>, <Element 'atbat' at 0x1bfbb50>, <Element 'atbat' at 0x1bfbc50>, <Element 'atbat' at 0x1c02110>, <Element 'atbat' at 0x1c022d0>, <Element 'atbat' at 0x1c02510>]
>>> atbats = ge.findall(".//atbat[event='Grounded Into DP']")
>>> atabats
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'atabats' is not defined
>>> atbats
[]
>>> for ab in atabts
  File "<stdin>", line 1
    for ab in atabts
                   ^
SyntaxError: invalid syntax
>>> for ab in atabts:
... 		ab.attrib('		ab.attrib('
... 
... 
  File "<stdin>", line 3
    
    ^
SyntaxError: invalid syntax
>>> atbats = ge.findall(".//atbat[@event='Grounded Into DP']")
>>> atbats
[]
>>> games[0]
u'2014_06_01_anamlb_oakmlb_1'
>>> atbats = ge.findall(".//atbat[@event='Double Play']")
>>> atbats
[<Element 'atbat' at 0x1b33a10>]
>>> atbats[0].attrib
{'b': '1', 'des_es': 'Albert Pujols batea rodado para doble matanza, campo corto Jed Lowrie a primera base Alberto Callaspo a tercera base Josh Donaldson.   Kole Calhoun a cabo a 3ra.  ', 'start_tfs': '201218', 'des': 'Albert Pujols grounds into a double play, shortstop Jed Lowrie to first baseman Alberto Callaspo to third baseman Josh Donaldson.   Kole Calhoun out at 3rd.  ', 'pitcher': '543243', 'o': '3', 's': '2', 'num': '3', 'batter': '405395', 'b1': '', 'b2': '', 'b3': '', 'event': 'Double Play', 'start_tfs_zulu': '2014-06-01T20:12:18Z'}
>>> 
>>> 
>>> atbats = ge.findall(".//atbat[@event='Triple Play']")
>>> atbats
[]
>>> 
